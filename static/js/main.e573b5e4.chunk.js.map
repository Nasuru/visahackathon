{"version":3,"sources":["assets/pic1.png","assets/pic2.png","assets/pic3.png","components/imgCarousel.jsx","pages/home.jsx","pages/login.jsx","components/navigationBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImgCarousel","Carousel","Item","className","src","img1","alt","Caption","id","Button","variant","size","active","img2","img3","Home","Fragment","Container","fluid","Row","Col","Login","Form","Group","controlId","Label","Control","type","placeholder","Styles","styled","div","NavigationBar","Navbar","collapseOnSelect","expand","Brand","href","Toggle","area-controls","Collapse","Nav","Link","App","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e573b5e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.5eb33fe5.png\";","module.exports = __webpack_public_path__ + \"static/media/pic2.c6f61088.png\";","module.exports = __webpack_public_path__ + \"static/media/pic3.f55ab5a9.png\";","import React, { Component } from 'react';\r\nimport {Carousel, Button} from 'react-bootstrap';\r\nimport img1 from '../assets/pic1.png';\r\nimport img2 from '../assets/pic2.png';\r\nimport img3 from '../assets/pic3.png';\r\nimport '../css/carousel.css';\r\n\r\nexport const ImgCarousel = () => (\r\n    <Carousel>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img1}\r\n            alt=\"First Slide\"/>\r\n            <Carousel.Caption>\r\n                <h2 id=\"h2_car\">Give a gift worth giving</h2>\r\n                <p id=\"p_car\">Let them see your signature and why they won't make\r\n                    it in life\r\n                </p>\r\n                <Button variant=\"primary\" size=\"lg\" active>Make a Gift</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img2}\r\n            alt=\"Second Slide\"/>\r\n            <Carousel.Caption>\r\n                <h2 id=\"h2_car\">It will only cost you a kidney and three teeth</h2>\r\n                <p id=\"p_car\">So what are you waiting for?\r\n                </p>\r\n              <Button variant=\"primary\" size=\"lg\" active>I Said Make a Gift</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n            <img className=\"d-block w-100\" src={img3}\r\n            alt=\"Second Slide\"/>\r\n            <Carousel.Caption>\r\n            <h2 id=\"h2_car\">Do you like living?</h2>\r\n                <p id=\"p_car\">Well, let me tell you something...\r\n                </p>\r\n              <Button variant=\"primary\" size=\"lg\" active>If You Don't Make a Gift, I Will Literally Stab You</Button>{' '}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>\r\n    </Carousel>\r\n)","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport {ImgCarousel} from '../components/imgCarousel';\r\nimport {Row, Col, Container} from 'react-bootstrap';\r\nimport '../css/home.css';\r\n\r\nexport const Home = () => (\r\n    <React.Fragment>\r\n        <ImgCarousel/>\r\n        <Container fluid=\"md\">\r\n            <Row>\r\n                <Col>\r\n                    <br/>\r\n                    <h2>Free Delivery</h2>\r\n                    <br/>\r\n                    <p>We will deliver it for free, the fee for delivery... free!</p>\r\n                </Col>\r\n                <Col>\r\n                    <br/>\r\n                    <h2>Not Illegal</h2> \r\n                    <br/>\r\n                    <p>We swear that you won't be investigated if you buy from us ;)</p>               \r\n                    </Col>\r\n                <Col>\r\n                    <br/>\r\n                    <h2>Make someone smile!</h2>\r\n                    <br/>\r\n                    <p>Who doesn't like free money?</p>                \r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n    </React.Fragment>\r\n)","import React, { Component } from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport '../css/login.css';\r\n\r\nexport const Login = () => (\r\n    <div>\r\n    <Form>\r\n        <h2>Login</h2>\r\n        <Form.Group controlId=\"formUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"username\" placeholder=\"Enter username or email\"/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"username\" placeholder=\"Enter password\"/>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n        </Button>\r\n    </Form>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport {Nav, Navbar} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div `\r\n    .navbar {\r\n        background-color: #222;\r\n    }\r\n    .navbar-nav .nav-link {\r\n        color: white;\r\n\r\n        &: hover {\r\n            color:black;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const NavigationBar = () => (\r\n    <Styles>\r\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/visahackathon/#/\">Signed Gift</Navbar.Brand>\r\n        <Navbar.Toggle area-controls=\"basic-navbar-nav\"/>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/\">Home</Nav.Link></Nav.Item>\r\n                <Nav.Item><Nav.Link href=\"/visahackathon/#/login\">Login</Nav.Link></Nav.Item>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n    </Styles>\r\n)","import React, {Component}  from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {Home} from './pages/home';\nimport {Login} from './pages/login';\nimport {NavigationBar} from './components/navigationBar';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavigationBar/>\n        <HashRouter>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/login\" component={Login}/>\n        </HashRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}